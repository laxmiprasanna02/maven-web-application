on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
jobs:
  maven:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: install java
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Build with Maven
        run: |
             mvn clean package
             docker build . --file Dockerfile -t laxm:1 
             
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: repositoryforgithub
          IMAGE_TAG: ${{github.run_id}}
        run: |
           docker images ls
           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
           
           docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
           echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      
     
      
  #    - name: Fill in the new image ID in the Amazon ECS task definition
   #     id: task-def
    #    uses: aws-actions/amazon-ecs-render-task-definition@v1
     #   with:
      #   task-definition: task-definition.json
       #  container-name: my-container
        # image: ${{ steps.build-image.outputs.image }}

      #- name: Deploy Amazon ECS task definition
       # uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        #with:
         #task-definition: ${{ steps.task-def.outputs.task-definition }}
         #service: my-service
         #cluster: my-cluster
         #wait-for-service-stability: true
  #    - name: create a terraform
   #     run: |
    #         cd terraform
     #        terraform init
      #       terraform destroy --auto-approve

      - name: install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.24.0'
        id: install
      - name: aws configure
        run: aws eks update-kubeconfig --name devopsthehardway-cluster --region us-east-1
      - name: deploy eks
        run: |
          kubectl apply -f mavenwebappdeployment.yaml
          kubectl get pods -all
      
      
        
        
         
       
    
    
    
      
